{"version":3,"file":"components-post-PostListPage-PostListPage-stories.5e989c36.iframe.bundle.js","mappings":";;;;AAUA;;;AAKA;;;;;;AAMA;;AAEA;;;;AAMA;AACA;;;;AAMA;;;;;;;;AAUA;;ACxBA;;;ACLA;AACA;;;;;;AAMA;;;;;;ACfA;;;AAKA;;;;;;;AASA;;;;AAMA;;;;;;AAQA;;;AAKA;;;;;;AAMA;;;AAKA;;;;AAMA;;;;;;ACnDA;;;AAKA;;;;;;;;ACLA;;;;;;AAQA;;;AAKA;;;AAKA;;;;;;;AASA;;AAIA;;;;;;;;;;;;;ACzBA;;;AAKA;;;;;;;;;;;;;;;;AAkBA;;;;;;AAQA;;;;;;;;;;AAYA;;;;;;AAQA;;AAIA;;;;;;;;;;;;;;;;;;;;AC7DA;;;;;AAKA;AACA;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;;;;;;;;;;;;;;;;;;;;;;;;;;ACUA;;;AAGA;AACA;;;;;;AAMA","sources":["webpack://votogether/./src/components/post/PostListPage/style.ts","webpack://votogether/./src/components/post/PostListPage/index.tsx","webpack://votogether/./src/components/common/AddButton/style.ts","webpack://votogether/./src/components/common/Dashboard/CategoryToggle/style.ts","webpack://votogether/./src/components/common/Dashboard/GuestProfile/style.ts","webpack://votogether/./src/components/common/Dashboard/UserProfile/style.ts","webpack://votogether/./src/components/common/Dashboard/style.ts","webpack://votogether/./src/components/common/Drawer/style.ts","webpack://votogether/./src/components/common/LogoButton/style.ts","webpack://votogether/./src/components/common/SquareButton/style.ts"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nimport { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.div`\n  padding-top: 55px;\n  position: relative;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    padding-top: 0px;\n  }\n`;\n\nexport const HeaderWrapper = styled.div`\n  width: 100%;\n\n  position: fixed;\n  top: 0;\n\n  z-index: ${theme.zIndex.header};\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    display: none;\n    visibility: hidden;\n  }\n`;\n\nexport const DrawerWrapper = styled.div`\n  @media (min-width: ${theme.breakpoint.sm}) {\n    display: none;\n    visibility: hidden;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: end;\n  gap: 20px;\n\n  position: sticky;\n  bottom: 24px;\n`;\n\nexport const AddButtonWrapper = styled(Link)`\n  text-decoration: none;\n`;\n","import { Suspense, useContext } from 'react';\n\nimport { AuthContext } from '@hooks/context/auth';\nimport { useCategoryList } from '@hooks/query/category/useCategoryList';\nimport { useDrawer } from '@hooks/useDrawer';\n\nimport ErrorBoundary from '@pages/ErrorBoundary';\n\nimport AddButton from '@components/common/AddButton';\nimport Dashboard from '@components/common/Dashboard';\nimport Drawer from '@components/common/Drawer';\nimport NarrowMainHeader from '@components/common/NarrowMainHeader';\nimport Skeleton from '@components/common/Skeleton';\nimport UpButton from '@components/common/UpButton';\nimport PostList from '@components/post/PostList';\n\nimport { PATH } from '@constants/path';\n\nimport { scrollToTop } from '@utils/scrollToTop';\n\nimport * as S from './style';\n\nexport default function PostListPage() {\n  const { drawerRef, closeDrawer, openDrawer } = useDrawer('left');\n\n  const { isLoggedIn: isLogged, userInfo } = useContext(AuthContext).loggedInfo;\n  const { data: categoryList } = useCategoryList(isLogged);\n\n  const handleLogoutClick = () => {};\n\n  return (\n    <S.Container>\n      <S.HeaderWrapper>\n        <NarrowMainHeader handleMenuOpenClick={openDrawer} />\n      </S.HeaderWrapper>\n      <S.DrawerWrapper>\n        <Drawer handleDrawerClose={closeDrawer} placement=\"left\" width=\"225px\" ref={drawerRef}>\n          <Dashboard\n            userInfo={userInfo}\n            categoryList={categoryList ?? []}\n            handleLogoutClick={handleLogoutClick}\n          />\n        </Drawer>\n      </S.DrawerWrapper>\n      <ErrorBoundary fallback={<div>에러발생</div>}>\n        <Suspense fallback={<Skeleton />}>\n          <PostList />\n        </Suspense>\n      </ErrorBoundary>\n      <S.ButtonContainer>\n        <UpButton onClick={scrollToTop} />\n        <S.AddButtonWrapper to={PATH.POST_WRITE}>\n          <AddButton size=\"lg\" />\n        </S.AddButtonWrapper>\n      </S.ButtonContainer>\n    </S.Container>\n  );\n}\n","import { styled } from 'styled-components';\n\nimport { Size } from '@type/style';\n\ninterface ButtonProps {\n  size: Size;\n}\n\nconst SIZE = {\n  sm: { button: '25px', font: '13px' },\n  md: { button: '40px', font: '30px' },\n  lg: { button: '60px', font: '50px' },\n};\n\nexport const Button = styled.button<ButtonProps>`\n  display: block;\n\n  width: ${props => SIZE[props.size].button};\n  height: ${props => SIZE[props.size].button};\n  border-radius: 50%;\n\n  background-color: var(--primary-color);\n  color: var(--white);\n\n  font-size: ${props => SIZE[props.size].font};\n\n  cursor: pointer;\n`;\n","import { Link } from 'react-router-dom';\n\nimport { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.div`\n  font: var(--text-caption);\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const TitleContainer = styled.button`\n  display: flex;\n  align-items: center;\n\n  font: inherit;\n\n  cursor: pointer;\n`;\n\nexport const TriangleImage = styled.img`\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n`;\n\nexport const CategoryList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  padding: 16px 12px;\n`;\n\nexport const CategoryItem = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Circle = styled.button<{ $isFavorite: boolean }>`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  margin-right: 12px;\n\n  background-color: ${({ $isFavorite }) => ($isFavorite ? 'var(--primary-color)' : '#CCCCCC')};\n\n  cursor: pointer;\n`;\n\nexport const Caption = styled.span`\n  font: var(--text-caption);\n\n  color: var(--dark-gray);\n`;\n\nexport const CategoryNameLink = styled(Link)`\n  text-decoration: none;\n\n  color: inherit;\n`;\n","import { styled } from 'styled-components';\n\nimport { ProfileContainer } from '../profileStyle';\n\nexport const Container = styled(ProfileContainer)`\n  align-items: center;\n`;\n\nexport const Image = styled.img`\n  width: 183px;\n  height: 40px;\n`;\n\nexport const TextCard = styled.span`\n  margin-top: 20px;\n\n  font: var(--text-caption);\n\n  color: var(--dark-gray);\n`;\n","import { Link } from 'react-router-dom';\n\nimport { styled } from 'styled-components';\n\nexport const Badge = styled.span`\n  margin-bottom: 7px;\n`;\n\nexport const NickName = styled.span`\n  margin-bottom: 12px;\n\n  font: var(--text-title);\n\n  color: var(--red);\n`;\n\nexport const UserInfoContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const TextCardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const TextCardLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n\n  text-decoration: none;\n\n  color: initial;\n`;\n\nexport const TextCardTitle = styled.span`\n  font: var(--text-caption);\n`;\n\nexport const TextCardContent = styled.span`\n  font: var(--text-caption);\n  text-align: center;\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 225px;\n  height: 100vh;\n  padding: 20px;\n  border-right: 2px solid var(--gray);\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    height: 100%;\n  }\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n\n  width: 100%;\n  margin-bottom: 85px;\n\n  overflow-y: scroll;\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  width: 90px;\n  height: 40px;\n\n  position: absolute;\n  bottom: 30px;\n`;\n\nexport const SelectCategoryWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  justify-self: start;\n\n  width: 100%;\n  border-bottom: 2px solid var(--gray);\n  padding-bottom: 20px;\n  margin-top: 32px;\n`;\n\nexport const Circle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n\n  background-color: var(--red);\n`;\n\nexport const SelectCategoryText = styled.span`\n  font: var(--text-body);\n`;\n\nexport const CategoryToggleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  padding-top: 20px;\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Dialog = styled.dialog<{\n  $width: string;\n  $placement: 'left' | 'right';\n}>`\n  width: ${({ $width }) => $width};\n  min-height: 100%;\n\n  position: fixed;\n  top: 0;\n  left: ${({ $placement }) => ($placement === 'left' ? '0' : 'auto')};\n  right: ${({ $placement }) => ($placement === 'right' ? '0' : 'auto')};\n\n  overflow: hidden;\n\n  transition-property: transform;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 150ms;\n\n  z-index: ${theme.zIndex.modal};\n\n  &::backdrop {\n    background-color: rgba(0, 0, 0, 0.35);\n  }\n`;\n","import { styled } from 'styled-components';\n\ntype Content = 'icon' | 'text' | 'full';\n\nexport const Button = styled.button<{ content: Content }>`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  background-color: rgba(0, 0, 0, 0);\n\n  height: 100%;\n\n  cursor: pointer;\n\n  & :first-child {\n    height: 100%;\n    border-radius: 5px;\n  }\n\n  & :last-child {\n    height: ${props => props.content !== 'icon' && '60%'};\n  }\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\ninterface ButtonProps {\n  $theme: 'blank' | 'fill' | 'gray';\n}\n\nconst BORDER_THEME: Record<ButtonProps['$theme'], string> = {\n  fill: 'var(--primary-color)',\n  blank: 'var(--primary-color)',\n  gray: '#67727E',\n};\n\nconst TEXT_THEME: Record<ButtonProps['$theme'], string> = {\n  fill: 'white',\n  blank: 'var(--primary-color)',\n  gray: 'white',\n};\n\nconst BACKGROUND_THEME: Record<ButtonProps['$theme'], string> = {\n  fill: 'var(--primary-color)',\n  blank: 'white',\n  gray: '#67727E',\n};\n\nexport const Button = styled.button<ButtonProps>`\n  display: block;\n\n  width: 100%;\n  height: 100%;\n  border: 2px solid ${({ $theme }) => BORDER_THEME[$theme]};\n  border-radius: 8px;\n\n  color: ${({ $theme }) => TEXT_THEME[$theme]};\n  background-color: ${({ $theme }) => BACKGROUND_THEME[$theme]};\n\n  font: var(--text-caption);\n\n  cursor: pointer;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-body);\n  }\n`;\n"],"names":[],"sourceRoot":""}