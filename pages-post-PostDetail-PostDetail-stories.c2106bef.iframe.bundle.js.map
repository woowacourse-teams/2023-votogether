{"version":3,"file":"pages-post-PostDetail-PostDetail-stories.c2106bef.iframe.bundle.js","mappings":";;;;;;;AAWA;;;AAKA;;;;;AAKA;;AAEA;;;;;;ACdA;;;AAKA;;;;;;;AASA;;;;AAMA;;;;;;AAQA;;;AAKA;;;;;;AAMA;;;AAKA;;;;AAMA;;;;;;ACnDA;;;AAKA;;;;;;;;ACLA;;;;;;AAQA;;;AAKA;;;AAKA;;;;;;;AASA;;AAIA;;;;;;;;;;;;;ACzBA;;;AAKA;;;;;;;;;;;;;;;;AAkBA;;;;;;AAQA;;;;;;;;;;AAYA;;;;;;AAQA;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;;;;AAIA;;;AAKA;;;;;;AAMA;;AAEA;;;;AAMA;;;;;;AAMA;;;;AAMA;;;;;;;AAOA;;AAEA;;AAIA;;AAEA;;;;;;;;;;;;;;;;;;ACrCA;;;;;;;;;;;;;;;;;;;;;ACVA;;;AAKA;;;AAGA;;;AAKA;;;;;;;;;AASA;;;AAGA;;;AAKA;;;;;;;;;;;AAWA;;;AAKA;;;;;;;;;;;AAWA;;;AAGA;;;AAKA;;;;;AAKA;;;;;;;AC7DA;;;;;;;;;AAWA;;;;;;;;;AAWA;;;;;;;;;;;;AC5BA;AAEA;;;;;;;;ACCA;AACA;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;;;AAGA;;;AAGA;;;;;ACRA;;;;;;;;AASA;;;AAKA;;;;;;;;;AASA;;;AAKA;;;;;;;;;;;;;AAaA;;;AAKA;;;;AAIA;;;AAKA;;;AAGA;;;AAKA;;;;;;AAMA;;;;;AAOA;;;AAGA;;;AAKA;;;;;;;AAOA;;;;;;;;;;ACxFA;;;;;;ACJA;;;;;;;;;;ACAA","sources":["webpack://votogether/./src/pages/post/PostDetail/style.ts","webpack://votogether/./src/components/common/Dashboard/CategoryToggle/style.ts","webpack://votogether/./src/components/common/Dashboard/GuestProfile/style.ts","webpack://votogether/./src/components/common/Dashboard/UserProfile/style.ts","webpack://votogether/./src/components/common/Dashboard/style.ts","webpack://votogether/./src/components/common/Layout/style.ts","webpack://votogether/./src/components/common/LogoButton/style.ts","webpack://votogether/./src/components/common/Post/style.ts","webpack://votogether/./src/components/common/SearchBar/style.ts","webpack://votogether/./src/components/common/SquareButton/style.ts","webpack://votogether/./src/components/common/TagButton/style.ts","webpack://votogether/./src/components/optionList/WrittenVoteOptionList/WrittenVoteOption/ProgressBar/style.ts","webpack://votogether/./src/components/optionList/WrittenVoteOptionList/WrittenVoteOption/style.ts","webpack://votogether/./src/components/optionList/WrittenVoteOptionList/style.ts","webpack://votogether/./src/pages/post/PostDetail/BottomButtonPart/style.ts","webpack://votogether/./src/pages/post/PostDetail/InnerHeaderPart/style.ts"],"sourcesContent":["import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin: 70px 10px 20px 10px;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    margin-top: 30px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  position: fixed;\n  width: 100%;\n  top: 0;\n\n  z-index: ${theme.zIndex.header};\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    display: none;\n  }\n`;\n","import { Link } from 'react-router-dom';\n\nimport { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.div`\n  font: var(--text-caption);\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const TitleContainer = styled.button`\n  display: flex;\n  align-items: center;\n\n  font: inherit;\n\n  cursor: pointer;\n`;\n\nexport const TriangleImage = styled.img`\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n`;\n\nexport const CategoryList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  padding: 16px 12px;\n`;\n\nexport const CategoryItem = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Circle = styled.button<{ $isFavorite: boolean }>`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  margin-right: 12px;\n\n  background-color: ${({ $isFavorite }) => ($isFavorite ? 'var(--primary-color)' : '#CCCCCC')};\n\n  cursor: pointer;\n`;\n\nexport const Caption = styled.span`\n  font: var(--text-caption);\n\n  color: var(--dark-gray);\n`;\n\nexport const CategoryNameLink = styled(Link)`\n  text-decoration: none;\n\n  color: inherit;\n`;\n","import { styled } from 'styled-components';\n\nimport { ProfileContainer } from '../profileStyle';\n\nexport const Container = styled(ProfileContainer)`\n  align-items: center;\n`;\n\nexport const Image = styled.img`\n  width: 183px;\n  height: 40px;\n`;\n\nexport const TextCard = styled.span`\n  margin-top: 20px;\n\n  font: var(--text-caption);\n\n  color: var(--dark-gray);\n`;\n","import { Link } from 'react-router-dom';\n\nimport { styled } from 'styled-components';\n\nexport const Badge = styled.span`\n  margin-bottom: 7px;\n`;\n\nexport const NickName = styled.span`\n  margin-bottom: 12px;\n\n  font: var(--text-title);\n\n  color: var(--red);\n`;\n\nexport const UserInfoContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const TextCardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const TextCardLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n\n  text-decoration: none;\n\n  color: initial;\n`;\n\nexport const TextCardTitle = styled.span`\n  font: var(--text-caption);\n`;\n\nexport const TextCardContent = styled.span`\n  font: var(--text-caption);\n  text-align: center;\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: 225px;\n  height: 100vh;\n  padding: 20px;\n  border-right: 2px solid var(--gray);\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    height: 100%;\n  }\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n\n  width: 100%;\n  margin-bottom: 85px;\n\n  overflow-y: scroll;\n\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  width: 90px;\n  height: 40px;\n\n  position: absolute;\n  bottom: 30px;\n`;\n\nexport const SelectCategoryWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  justify-self: start;\n\n  width: 100%;\n  border-bottom: 2px solid var(--gray);\n  padding-bottom: 20px;\n  margin-top: 32px;\n`;\n\nexport const Circle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n\n  background-color: var(--red);\n`;\n\nexport const SelectCategoryText = styled.span`\n  font: var(--text-body);\n`;\n\nexport const CategoryToggleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  padding-top: 20px;\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.div`\n  height: 100vh;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    padding-top: 70px;\n  }\n`;\n\nexport const WideHeaderWrapper = styled.div`\n  width: 100%;\n\n  position: fixed;\n  top: 0;\n\n  z-index: ${theme.zIndex.header};\n\n  @media (max-width: ${theme.breakpoint.sm}) {\n    display: none;\n    visibility: hidden;\n  }\n`;\n\nexport const DashboardWrapper = styled.aside`\n  height: 90vh;\n\n  position: fixed;\n  left: 0;\n\n  @media (max-width: ${theme.breakpoint.sm}) {\n    display: none;\n    visibility: hidden;\n  }\n`;\n\nexport const MainContainer = styled.main<{ $isSidebarVisible: boolean }>`\n  display: flex;\n  justify-content: center;\n\n  margin-top: 15px;\n  width: 100%;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    margin-top: 0;\n    padding-left: ${({ $isSidebarVisible }) => $isSidebarVisible && '225px'};\n  }\n`;\n\nexport const ChildrenWrapper = styled.div<{ $isSidebarVisible: boolean }>`\n  width: 100%;\n  max-width: ${({ $isSidebarVisible }) => $isSidebarVisible && '700px'};\n`;\n","import { styled } from 'styled-components';\n\ntype Content = 'icon' | 'text' | 'full';\n\nexport const Button = styled.button<{ content: Content }>`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  background-color: rgba(0, 0, 0, 0);\n\n  height: 100%;\n\n  cursor: pointer;\n\n  & :first-child {\n    height: 100%;\n    border-radius: 5px;\n  }\n\n  & :last-child {\n    height: ${props => props.content !== 'icon' && '60%'};\n  }\n`;\n","import { Link } from 'react-router-dom';\n\nimport { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.li`\n  font: var(--text-small);\n  letter-spacing: 0.5px;\n  line-height: 1.5;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-caption);\n  }\n`;\n\nexport const Category = styled.span`\n  font: var(--text-small);\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-caption);\n  }\n`;\n\nexport const Title = styled.p<{ $isPreview: boolean }>`\n  display: -webkit-box;\n\n  font: var(--text-title);\n  text-overflow: ellipsis;\n  word-break: break-word;\n\n  overflow: hidden;\n\n  -webkit-line-clamp: ${props => props.$isPreview && '2'};\n  -webkit-box-orient: vertical;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font-size: 2.2rem;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  font: var(--text-small);\n\n  & > :nth-child(2) {\n    margin-left: 10px;\n  }\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-caption);\n  }\n`;\n\nexport const Content = styled.p<{ $isPreview: boolean }>`\n  display: -webkit-box;\n\n  font: var(--text-caption);\n  text-overflow: ellipsis;\n  word-break: break-word;\n\n  margin: 10px 0;\n\n  overflow: hidden;\n\n  -webkit-line-clamp: ${props => props.$isPreview && '10'};\n  -webkit-box-orient: vertical;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const DetailLink = styled(Link)<{ $isPreview: boolean }>`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  pointer-events: ${({ $isPreview }) => !$isPreview && 'none'};\n`;\n","import { styled } from 'styled-components';\n\nimport { Size } from '@type/style';\n\ninterface SearchBarProps {\n  size: Size | 'free';\n}\n\nconst formSize = {\n  sm: '170px',\n  md: '250px',\n  lg: '400px',\n};\n\nexport const Form = styled.form<SearchBarProps>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 5px;\n\n  width: ${props => (props.size === 'free' ? '100%' : formSize[props.size])};\n  height: 36px;\n  padding: 5px 10px;\n  border-radius: 5px;\n\n  background-color: #cccccc;\n  color: red;\n\n  font-size: 1rem;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 100%;\n  outline: 0;\n\n  background-color: rgba(0, 0, 0, 0);\n\n  font: var(--text-caption);\n  letter-spacing: 1px;\n`;\n\nexport const Button = styled.button`\n  background-color: rgba(0, 0, 0, 0);\n\n  cursor: pointer;\n`;\n","import { styled } from 'styled-components';\n\ninterface ButtonProps {\n  theme: 'blank' | 'fill';\n}\n\nexport const Button = styled.button<ButtonProps>`\n  display: block;\n\n  width: 100%;\n  height: 100%;\n  border: 2px solid var(--primary-color);\n  border-radius: 5px;\n\n  background-color: ${props =>\n    props.theme === 'blank' ? 'rgba(0,0,0,0)' : 'var(--primary-color)'};\n  color: ${props => (props.theme === 'blank' ? 'var(--primary-color)' : 'var(--white)')};\n\n  font: var(--text-body);\n\n  cursor: pointer;\n`;\n","import { styled } from 'styled-components';\n\nimport { Size } from '@type/style';\n\ninterface ButtonProps {\n  $size: Size;\n}\n\nconst size = {\n  sm: { width: '80px', height: '40px', fontSize: '14px' },\n  md: { width: '100px', height: '50px', fontSize: '20px' },\n  lg: { width: '120px', height: '60px', fontSize: '24px' },\n};\n\nexport const Button = styled.button<ButtonProps>`\n  display: block;\n\n  width: ${props => size[props.$size].width};\n  height: ${props => size[props.$size].height};\n  border-radius: 0 0 5px 5px;\n\n  background-color: var(--primary-color);\n  color: var(--white);\n\n  font-size: ${props => size[props.$size].fontSize};\n\n  cursor: pointer;\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  border-radius: 4px;\n\n  height: 8px;\n\n  background-color: rgba(0, 0, 0, 0.15);\n`;\n\nexport const Bar = styled.div<{ progress: number; $isSelected: boolean }>`\n  border-radius: 4px;\n\n  width: ${({ progress }) => `${progress}%`};\n  height: 8px;\n\n  background-color: ${({ $isSelected }) => ($isSelected ? 'var(--primary-color)' : '#9F9F9F')};\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.li<{ $isSelected: boolean }>`\n  display: flex;\n  flex-direction: column;\n\n  border: ${({ $isSelected }) =>\n    $isSelected ? '2px solid var(--primary-color)' : '1px solid rgba(0, 0, 0, 0.1)'};\n  border-radius: 4px;\n  padding: 10px 15px;\n\n  color: #5b5b5b;\n\n  cursor: pointer;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    padding: 15px 25px;\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 4px;\n  margin-bottom: 10px;\n\n  width: 100%;\n\n  aspect-ratio: 1/1;\n  object-fit: cover;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const PreviewContent = styled.p`\n  display: -webkit-box;\n\n  font: var(--text-caption);\n  font-weight: 500;\n  text-overflow: ellipsis;\n  word-break: break-word;\n\n  overflow: hidden;\n\n  -webkit-line-clamp: 2; // 원하는 라인수\n  -webkit-box-orient: vertical;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const DetailContent = styled.p`\n  font: var(--text-caption);\n  font-weight: 500;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  margin-top: 12px;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    margin-top: 18px;\n  }\n`;\n\nexport const TextContainer = styled.div`\n  margin-top: 8px;\n\n  text-align: end;\n  font-weight: 500;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    margin-top: 12px;\n\n    font: var(--text-body);\n  }\n`;\n\nexport const PeopleText = styled.span`\n  font: var(--text-caption);\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const PercentText = styled.span`\n  margin-left: 4px;\n\n  font: var(--text-small);\n\n  opacity: 0.7;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-caption);\n  }\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const VoteOptionListContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  width: 100%;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    gap: 18px;\n  }\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const BottomButtonContainer = styled.div`\n  display: none;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    display: flex;\n    width: 90%;\n    height: 40px;\n    margin-top: 40px;\n    gap: 10px;\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const TagButtonWrapper = styled.div`\n  position: absolute;\n  top: 55px;\n  margin-right: 10px;\n  right: 10px;\n`;\n"],"names":[],"sourceRoot":""}