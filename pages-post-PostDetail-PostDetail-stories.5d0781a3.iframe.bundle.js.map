{"version":3,"file":"pages-post-PostDetail-PostDetail-stories.5d0781a3.iframe.bundle.js","mappings":";;;;;AASA;;AAEA;;;AAKA;;;;;;;AAOA;;;AAKA;;;;;;ACrBA;;;AAKA;;;;;AAKA;;AAEA;;;AAKA;;AChBA;;;;ACEA;;;;;AAOA;;;;AAIA;;;AAKA;;;;;;AAMA;;;AAKA;;;;;AAOA;;;;;;;AChCA;;;;;;;;;AAWA;;;;;AAKA;;;AAKA;;;;;;AAMA;;;AAKA;;;;AAIA;;;;AAMA;;;;;;;;;;;;;;;;;;;AC/CA;;;;;ACCA;;;;AAIA;;;AAKA;;;;;;AAMA;;AAEA;;;;AAMA;;;;;;;AAOA;;;;AAMA;;;;;;;AAOA;;AAEA;;AAIA;;AAEA;;;;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;;;AAKA;;;AAGA;;;AAKA;;;;;;;;;;;;;;AAgBA;;;AAKA;;;;;;;;;AASA;AAGA;;;;;;;;;AASA;;;AAGA;;;AAKA;;;;;;;;;;;AAWA;;;AAKA;;;;;;;;;;;;AAYA;;;AAGA;;;AAKA;;;;AAMA;;;;;;;;AAQA;;;ACnGA;;;;;;;;;;;;ACNA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;ACPA;;;;;;;;;AAWA;;;;;;;;;AAWA;;;;AAMA;;;;;;AC/BA;AACA;;;;;;AAMA;;;;;;;;;;;;;;;;;ACNA;;AAIA;;;;;;;;;ACZA;;;AAGA;;;AAGA;;;;;;ACPA;;;;;;;;;;AAWA;;;AAKA;;;;;;;;;AASA;;;AAKA;;;;;;;;;;;;;AAaA;;;AAKA;;;;AAIA;;;AAKA;;;AAGA;;;AAKA;;;;;;AAMA;;;;;AAOA;;;AAGA;;;AAKA;;;;;;;AAOA;;;;;;;;;;AC3FA;;;;;;;;;;;ACWA;;;;;AAHA;AAGA;;;;;;AAQA;;;;;;;AASA;;;;;;;;;;AChCA;;;;;;;;;;ACAA;;;;;;AAQA","sources":["webpack://votogether/./src/pages/post/PostDetail/PostDetail/style.ts","webpack://votogether/./src/pages/post/PostDetail/PostDetailFallback/style.ts","webpack://votogether/./src/pages/post/PostDetail/PostDetailFallback/index.tsx","webpack://votogether/./src/components/comment/CommentList/CommentLoginSection/style.ts","webpack://votogether/./src/components/comment/CommentList/style.ts","webpack://votogether/./src/components/common/IconButton/style.ts","webpack://votogether/./src/components/common/Layout/style.ts","webpack://votogether/./src/components/common/LogoButton/style.ts","webpack://votogether/./src/components/common/Post/style.ts","webpack://votogether/./src/components/common/Post/index.tsx","webpack://votogether/./src/components/common/PostMenu/style.ts","webpack://votogether/./src/components/common/SearchBar/style.ts","webpack://votogether/./src/components/common/TagButton/style.ts","webpack://votogether/./src/components/common/WideHeader/style.ts","webpack://votogether/./src/components/optionList/WrittenVoteOptionList/WrittenVoteOption/ProgressBar/style.ts","webpack://votogether/./src/components/optionList/WrittenVoteOptionList/WrittenVoteOption/style.ts","webpack://votogether/./src/components/optionList/WrittenVoteOptionList/style.ts","webpack://votogether/./src/pages/Error/style.ts","webpack://votogether/./src/pages/post/PostDetail/BottomButtonPart/style.ts","webpack://votogether/./src/pages/post/PostDetail/InnerHeaderPart/style.ts"],"sourcesContent":["import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const HeaderContainer = styled.header`\n  position: fixed;\n  width: 100%;\n  top: 0;\n\n  z-index: ${theme.zIndex.header};\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    display: none;\n  }\n`;\n\nexport const MainContainer = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin: 70px 10px 20px 10px;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    margin-top: 30px;\n  }\n`;\n\nexport const BottomContainer = styled.div`\n  margin: 10px;\n  margin-bottom: 30px;\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.div`\n  margin-top: 70px;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    margin-top: 30px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  position: fixed;\n  width: 100%;\n  top: 0;\n\n  z-index: ${theme.zIndex.header};\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    display: none;\n  }\n`;\n\nexport const SkeletonWrapper = styled.div`\n  padding: 0 10px;\n`;\n","import { useNavigate } from 'react-router-dom';\n\nimport IconButton from '@components/common/IconButton';\nimport NarrowTemplateHeader from '@components/common/NarrowTemplateHeader';\nimport Skeleton from '@components/common/Skeleton';\n\nimport * as S from './style';\n\nexport default function PostDetailFallback() {\n  const navigate = useNavigate();\n\n  return (\n    <S.Container>\n      <S.HeaderContainer>\n        <NarrowTemplateHeader>\n          <IconButton\n            category=\"back\"\n            onClick={() => {\n              navigate(-1);\n            }}\n          />\n        </NarrowTemplateHeader>\n      </S.HeaderContainer>\n      <S.SkeletonWrapper>\n        <Skeleton isLarge={true} />\n      </S.SkeletonWrapper>\n    </S.Container>\n  );\n}\n","import { Link } from 'react-router-dom';\n\nimport { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    padding: 0 20px;\n\n    font-size: 2.4rem;\n  }\n`;\n\nexport const Title = styled.span`\n  font-size: 2.2rem;\n  font-weight: 600;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font-size: 2.4rem;\n  }\n`;\n\nexport const SubTitle = styled.p`\n  margin-top: 10px;\n\n  font: var(--text-caption);\n  font-weight: 400;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const LoginLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n\n  margin-top: 40px;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n  height: 45px;\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.div``;\n\nexport const TextOrLoginWrapper = styled.div`\n  margin-top: 30px;\n  padding: 40px 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n`;\n\nexport const ListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 25px;\n\n  padding-top: 25px;\n  border-top: 1px solid rgba(0, 0, 0, 0.2);\n\n  position: relative;\n`;\n\nexport const MoreButtonWrapper = styled.div`\n  width: 80px;\n  height: 46px;\n  margin: 25px auto 0 auto;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    width: 190px;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: end;\n\n  padding: 20px 0;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    padding: 50px 0;\n  }\n`;\n\nexport const TopButtonWrapper = styled.div`\n  width: 55px;\n  height: 40px;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    width: 64px;\n    height: 46px;\n  }\n`;\n\nexport const HiddenInput = styled.input`\n  position: absolute;\n  bottom: 0;\n\n  color: white;\n  z-index: -1;\n`;\n","import { styled } from 'styled-components';\n\nexport const Button = styled.button<{ $isRoundBackground: boolean }>`\n  width: 35px;\n  height: 35px;\n  border-radius: 50%;\n\n  background-color: ${props => (props.$isRoundBackground ? 'var(--gray)' : 'rgba(0, 0, 0, 0)')};\n\n  cursor: pointer;\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.div`\n  height: 100vh;\n`;\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    padding-top: 70px;\n  }\n`;\n\nexport const WideHeaderWrapper = styled.div`\n  width: 100%;\n\n  position: fixed;\n  top: 0;\n\n  z-index: ${theme.zIndex.header};\n\n  @media (max-width: ${theme.breakpoint.sm}) {\n    display: none;\n    visibility: hidden;\n  }\n`;\n\nexport const DashboardWrapper = styled.aside`\n  width: 225px;\n  height: 90vh;\n\n  position: fixed;\n  left: 0;\n\n  @media (max-width: ${theme.breakpoint.sm}) {\n    display: none;\n    visibility: hidden;\n  }\n`;\n\nexport const MainContainer = styled.main<{ $isSidebarVisible: boolean }>`\n  display: flex;\n  justify-content: center;\n\n  margin-top: 15px;\n  width: 100%;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    margin-top: 0;\n    padding-left: ${({ $isSidebarVisible }) => $isSidebarVisible && '225px'};\n  }\n`;\n\nexport const ChildrenWrapper = styled.div<{ $isSidebarVisible: boolean }>`\n  width: 100%;\n  max-width: ${({ $isSidebarVisible }) => $isSidebarVisible && '700px'};\n`;\n","import { styled } from 'styled-components';\n\ntype Content = 'icon' | 'text' | 'full';\n\nexport const Button = styled.button<{ content: Content }>`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n\n  background-color: rgba(0, 0, 0, 0);\n\n  height: 100%;\n\n  cursor: pointer;\n\n  & :first-child {\n    height: 100%;\n    border-radius: 5px;\n  }\n\n  & :last-child {\n    height: ${props => props.content !== 'icon' && '60%'};\n  }\n`;\n","import { Link } from 'react-router-dom';\n\nimport { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.li`\n  width: 100%;\n\n  position: relative;\n\n  font: var(--text-small);\n  letter-spacing: 0.5px;\n  line-height: 1.5;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-caption);\n  }\n`;\n\nexport const Category = styled.span`\n  font: var(--text-small);\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-caption);\n  }\n`;\n\nexport const ImageIconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n\n  position: absolute;\n  right: 25px;\n  top: 0;\n\n  background-color: var(--header);\n`;\n\nexport const ImageIcon = styled.img`\n  width: 13px;\n  height: 13px;\n`;\n\nexport const ActivateState = styled.div<{ $isActive: boolean }>`\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n\n  position: absolute;\n  right: 0;\n  top: 0;\n\n  background-color: ${({ $isActive }) => ($isActive ? 'var(--active-post)' : 'var(--dark-gray)')};\n`;\n\nexport const Title = styled.p<{ $isPreview: boolean }>`\n  display: -webkit-box;\n\n  font: var(--text-title);\n  text-overflow: ellipsis;\n  word-break: break-word;\n\n  overflow: hidden;\n\n  -webkit-line-clamp: ${props => props.$isPreview && '2'};\n  -webkit-box-orient: vertical;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font-size: 2.2rem;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  font: var(--text-small);\n\n  & > :nth-child(2) {\n    margin-left: 10px;\n  }\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-caption);\n  }\n`;\n\nexport const Content = styled.div<{ $isPreview: boolean }>`\n  display: -webkit-box;\n\n  margin: 10px 0;\n\n  font: var(--text-caption);\n  text-overflow: ellipsis;\n  word-break: break-word;\n  white-space: pre-wrap;\n\n  overflow: hidden;\n\n  -webkit-line-clamp: ${props => props.$isPreview && '10'};\n  -webkit-box-orient: vertical;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const DetailLink = styled(Link)<{ $isPreview: boolean }>`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  border-radius: 4px;\n  margin-bottom: 10px;\n\n  aspect-ratio: 1/1;\n  object-fit: cover;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    margin-bottom: 20px;\n  }\n`;\n","import { useContext, useEffect } from 'react';\n\nimport { PostInfo } from '@type/post';\n\nimport { AuthContext } from '@hooks/context/auth';\nimport { useCreateVote } from '@hooks/query/post/useCreateVote';\nimport { useEditVote } from '@hooks/query/post/useEditVote';\nimport { useToast } from '@hooks/useToast';\n\nimport WrittenVoteOptionList from '@components/optionList/WrittenVoteOptionList';\n\nimport { PATH } from '@constants/path';\nimport { POST } from '@constants/vote';\n\nimport { convertImageUrlToServerUrl } from '@utils/post/convertImageUrlToServerUrl';\nimport { linkifyText } from '@utils/post/formatContentLink';\nimport { checkClosedPost, convertTimeToWord } from '@utils/time';\n\nimport photoIcon from '@assets/photo_white.svg';\n\nimport Toast from '../Toast';\n\nimport * as S from './style';\n\ninterface PostProps {\n  postInfo: PostInfo;\n  isPreview: boolean;\n}\n\nexport default function Post({ postInfo, isPreview }: PostProps) {\n  const { postId, category, imageUrl, title, writer, createTime, deadline, content, voteInfo } =\n    postInfo;\n  const { loggedInfo } = useContext(AuthContext);\n  const { isToastOpen, openToast, toastMessage } = useToast();\n\n  const {\n    mutate: createVote,\n    isError: isCreateError,\n    error: createError,\n  } = useCreateVote({ isPreview, postId });\n  const {\n    mutate: editVote,\n    isError: isEditError,\n    error: editError,\n  } = useEditVote({ isPreview, postId });\n\n  const isActive = !checkClosedPost(deadline);\n\n  const isStatisticsVisible =\n    writer.id === loggedInfo.id || !isActive || voteInfo.selectedOptionId !== POST.NOT_VOTE;\n\n  const handleVoteClick = (newOptionId: number) => {\n    if (!loggedInfo.isLoggedIn) {\n      openToast('투표는 로그인 후에 이용하실 수 있습니다.');\n      return;\n    }\n\n    if (!isActive) {\n      openToast('마감된 게시글에는 투표를 할 수 없습니다.');\n      return;\n    }\n\n    if (writer.nickname === loggedInfo.userInfo?.nickname) {\n      openToast('내가 쓴 글에는 투표를 할 수 없습니다.');\n      return;\n    }\n\n    if (voteInfo.selectedOptionId === newOptionId) return;\n\n    if (voteInfo.selectedOptionId === POST.NOT_VOTE) {\n      createVote(newOptionId);\n      return;\n    }\n\n    editVote({\n      originOptionId: voteInfo.selectedOptionId,\n      newOptionId,\n    });\n  };\n\n  useEffect(() => {\n    if (isCreateError && createError instanceof Error) {\n      openToast(createError.message);\n    }\n  }, [isCreateError, createError]);\n\n  useEffect(() => {\n    if (isEditError && editError instanceof Error) {\n      openToast(editError.message);\n    }\n  }, [isEditError, editError]);\n\n  const checkIncludeImage = () => {\n    if (imageUrl !== '') return true;\n\n    return voteInfo.options.map(option => option.imageUrl).some(url => url !== '');\n  };\n\n  const isPreviewTabIndex = isPreview ? undefined : 0;\n\n  return (\n    <S.Container as={isPreview ? 'li' : 'div'}>\n      <S.DetailLink\n        as={isPreview ? '' : 'main'}\n        to={isPreview ? `${PATH.POST}/${postId}` : '#'}\n        $isPreview={isPreview}\n        aria-describedby={\n          isPreview\n            ? '해당 게시물의 상세페이지로 이동하기'\n            : '현재 상세페이지이므로 사용할 수 없습니다.'\n        }\n      >\n        <S.Category\n          tabIndex={isPreviewTabIndex}\n          aria-label={`카테고리 ${category.map(category => category.name).join('|')}`}\n        >\n          {category.map(category => category.name).join(' | ')}\n        </S.Category>\n        {isPreview && checkIncludeImage() && (\n          <S.ImageIconWrapper>\n            <S.ImageIcon src={photoIcon} alt=\"해당 게시물은 사진을 포함하고 있습니다.\" />\n          </S.ImageIconWrapper>\n        )}\n        <S.ActivateState\n          tabIndex={isPreviewTabIndex}\n          role=\"status\"\n          aria-label={`게시글 ${isActive ? '진행중' : '마감완료'}`}\n          $isActive={isActive}\n        />\n        <S.Title\n          tabIndex={isPreviewTabIndex}\n          aria-label={`게시글 제목: ${title}`}\n          $isPreview={isPreview}\n        >\n          {title}\n        </S.Title>\n        <S.Wrapper>\n          <span aria-label={`작성자 ${writer.nickname}`} tabIndex={isPreviewTabIndex}>\n            {writer.nickname}\n          </span>\n          <S.Wrapper>\n            <span\n              aria-label={`작성일시 ${convertTimeToWord(createTime)}`}\n              tabIndex={isPreviewTabIndex}\n            >\n              {convertTimeToWord(createTime)}\n            </span>\n            <span\n              aria-label={`투표 마감일시 ${isActive ? convertTimeToWord(deadline) : '마감 완료'}`}\n              tabIndex={isPreviewTabIndex}\n            >\n              {isActive ? convertTimeToWord(deadline) : '마감 완료'}\n            </span>\n          </S.Wrapper>\n        </S.Wrapper>\n        <S.Content\n          tabIndex={isPreviewTabIndex}\n          aria-label={`내용: ${content}`}\n          $isPreview={isPreview}\n        >\n          {linkifyText(content)}\n        </S.Content>\n        {!isPreview && imageUrl && (\n          <S.Image src={convertImageUrlToServerUrl(imageUrl)} alt={'본문에 포함된 이미지'} />\n        )}\n      </S.DetailLink>\n      <WrittenVoteOptionList\n        isStatisticsVisible={isStatisticsVisible}\n        selectedOptionId={voteInfo.selectedOptionId}\n        handleVoteClick={handleVoteClick}\n        isPreview={isPreview}\n        voteOptionList={voteInfo.options}\n      />\n      {isToastOpen && (\n        <Toast size=\"md\" position=\"bottom\">\n          {toastMessage}\n        </Toast>\n      )}\n    </S.Container>\n  );\n}\n","import { styled } from 'styled-components';\n\nimport { MenuColor } from '@type/menu';\n\nconst COLOR_PALETTE: Record<MenuColor, string> = {\n  red: 'var(--primary-color)',\n  black: '#727171',\n};\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: max-content;\n  border: 1px solid rgba(0, 0, 0, 0.4);\n  border-radius: 6px;\n\n  background-color: var(--white);\n\n  font: var(--text-caption);\n`;\n\nexport const Menu = styled.button<{ $color: MenuColor }>`\n  padding: 10px 15px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.4);\n\n  color: ${({ $color }) => COLOR_PALETTE[$color]};\n  background-color: white;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: var(--gray);\n  }\n\n  &:first-child {\n    border-radius: 6px 6px 0 0;\n  }\n\n  &:last-child {\n    border-radius: 0 0 6px 6px;\n    border-bottom: none;\n  }\n`;\n","import { styled } from 'styled-components';\n\nimport { Size } from '@type/style';\n\ninterface SearchBarProps {\n  size: Size | 'free';\n}\n\nconst formSize = {\n  sm: '170px',\n  md: '250px',\n  lg: '400px',\n};\n\nexport const Form = styled.form<SearchBarProps>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 5px;\n\n  width: ${props => (props.size === 'free' ? '100%' : formSize[props.size])};\n  height: 36px;\n  padding: 5px 10px;\n  border-radius: 5px;\n\n  background-color: #cccccc;\n  color: red;\n\n  font-size: 1rem;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 100%;\n  outline: 0;\n\n  background-color: rgba(0, 0, 0, 0);\n\n  font: var(--text-caption);\n  letter-spacing: 1px;\n`;\n\nexport const Button = styled.button`\n  background-color: rgba(0, 0, 0, 0);\n\n  cursor: pointer;\n`;\n\nexport const ScreenReaderDirection = styled.p`\n  position: absolute;\n  left: -9999px;\n`;\n","import { styled } from 'styled-components';\n\nimport { Size } from '@type/style';\n\ninterface ButtonProps {\n  $size: Size;\n}\n\nconst SIZE = {\n  sm: { width: '80px', height: '40px', fontSize: '14px' },\n  md: { width: '100px', height: '50px', fontSize: '20px' },\n  lg: { width: '120px', height: '60px', fontSize: '24px' },\n};\n\nexport const Button = styled.button<ButtonProps>`\n  display: block;\n\n  width: ${props => SIZE[props.$size].width};\n  height: ${props => SIZE[props.$size].height};\n  border-radius: 0 0 5px 5px;\n\n  background-color: var(--primary-color);\n  color: var(--white);\n\n  font-size: ${props => SIZE[props.$size].fontSize};\n\n  cursor: pointer;\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 100%;\n  height: 70px;\n\n  position: fixed;\n  top: 0;\n\n  background-color: var(--header);\n\n  padding: 0 80px;\n`;\n\nexport const LogoWrapper = styled.div`\n  height: 50%;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  border-radius: 4px;\n\n  height: 8px;\n\n  background-color: rgba(0, 0, 0, 0.15);\n`;\n\nexport const Bar = styled.div<{ progress: number; $isSelected: boolean }>`\n  border-radius: 4px;\n\n  width: ${({ progress }) => `${progress}%`};\n  height: 8px;\n\n  background-color: ${({ $isSelected }) => ($isSelected ? 'var(--primary-color)' : '#9F9F9F')};\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.button<{ $isSelected: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  border: ${({ $isSelected }) =>\n    $isSelected ? '2px solid var(--primary-color)' : '1px solid rgba(0, 0, 0, 0.1)'};\n  border-radius: 4px;\n  padding: 10px 15px;\n\n  color: #5b5b5b;\n\n  text-align: left;\n\n  cursor: pointer;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    padding: 15px 25px;\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 4px;\n  margin-bottom: 10px;\n\n  width: 100%;\n\n  aspect-ratio: 1/1;\n  object-fit: cover;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const PreviewContent = styled.p`\n  display: -webkit-box;\n\n  font: var(--text-caption);\n  font-weight: 500;\n  text-overflow: ellipsis;\n  word-break: break-word;\n\n  overflow: hidden;\n\n  -webkit-line-clamp: 2; // 원하는 라인수\n  -webkit-box-orient: vertical;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const DetailContent = styled.p`\n  font: var(--text-caption);\n  font-weight: 500;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  margin-top: 12px;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    margin-top: 18px;\n  }\n`;\n\nexport const TextContainer = styled.div`\n  margin-top: 8px;\n\n  text-align: end;\n  font-weight: 500;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    margin-top: 12px;\n\n    font: var(--text-body);\n  }\n`;\n\nexport const PeopleText = styled.span`\n  font: var(--text-caption);\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const PercentText = styled.span`\n  margin-left: 4px;\n\n  color: var(--text-dark-gray);\n\n  font: var(--text-small);\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-caption);\n  }\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const VoteOptionListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  width: 100%;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    gap: 18px;\n  }\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 40px;\n\n  position: relative;\n`;\n\nexport const HeaderWrapper = styled.div`\n  width: 100%;\n\n  position: fixed;\n\n  z-index: ${theme.zIndex.header};\n`;\n\nexport const Description = styled.p`\n  width: 90%;\n  margin-top: 60px;\n\n  font: var(--text-title);\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  width: 90%;\n\n  color: gray;\n\n  font: var(--text-body);\n  text-align: center;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n\n  width: 280px;\n  height: 50px;\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const BottomButtonContainer = styled.div`\n  display: none;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    display: flex;\n    width: 90%;\n    height: 40px;\n    margin-top: 40px;\n    gap: 10px;\n  }\n`;\n","import { styled } from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const TagButtonWrapper = styled.div`\n  margin-right: 10px;\n\n  position: absolute;\n  top: 55px;\n  right: 10px;\n`;\n\nexport const MenuWrapper = styled.div`\n  margin-right: 10px;\n\n  position: absolute;\n  top: 45px;\n  right: 10px;\n`;\n"],"names":[],"sourceRoot":""}