{"version":3,"file":"7079.79d5db4a.iframe.bundle.js","mappings":";;;;;;;;;AAeA;;;AAKA;;;AAGA;;;AAKA;;;;;;;;;;;;;;AAgBA;;;AAKA;;;;;;;;;AASA;AAGA;;;;;;;;;AASA;;;AAGA;;;AAKA;;;;;;;;;;;AAWA;;;AAKA;;;;;;;;;;;AAWA;;;AAGA;;;AAKA;;;;;AAKA;AAGA;;;;;;;;AAQA;;;;;;ACxHA;;;AAKA;;;;;;;AA2BA;;;;;AAKA;;AAEA;AAGA;;;AAGA;AAGA;;;;;;;;;;;;AAcA;;;;;;;AASA;;;;;;;;;;;ACtEA;;;AAGA;;;AAGA;;;;;;ACPA;;;;;;;;;;AAWA;;;AAKA;;;;;;;;;AASA;;;AAKA;;;;;;;;;;;;;AAaA;;;AAKA;;;;AAIA;;;AAKA;;;AAGA;;;AAKA;;;;;;AAMA;;;;;AAOA;;;AAGA;;;AAKA;;;;;;;AAOA;;;;;;;;;;AC3FA;;;;;;;;;ACCA;;;;AAIA;;;AAKA;;AAIA;;;;;;;;;AASA;;;AAKA;;;;;AC9BA;;;;;;;;;AASA;;;AAKA;;;;;;;;;;;AAaA;;;;;;;;;;;ACjBA","sources":["webpack://votogether/./src/components/common/Post/style.ts","webpack://votogether/./src/components/common/Select/style.ts","webpack://votogether/./src/components/optionList/WrittenVoteOptionList/WrittenVoteOption/ProgressBar/style.ts","webpack://votogether/./src/components/optionList/WrittenVoteOptionList/WrittenVoteOption/style.ts","webpack://votogether/./src/components/optionList/WrittenVoteOptionList/style.ts","webpack://votogether/./src/components/post/EmptyPostList/style.ts","webpack://votogether/./src/components/post/PostList/style.ts","webpack://votogether/./src/components/post/PostList/index.tsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nimport { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.li`\n  width: 100%;\n\n  position: relative;\n\n  font: var(--text-small);\n  letter-spacing: 0.5px;\n  line-height: 1.5;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-caption);\n  }\n`;\n\nexport const Category = styled.span`\n  font: var(--text-small);\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-caption);\n  }\n`;\n\nexport const ImageIconWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n\n  position: absolute;\n  right: 25px;\n  top: 0;\n\n  background-color: var(--header);\n`;\n\nexport const ImageIcon = styled.img`\n  width: 13px;\n  height: 13px;\n`;\n\nexport const ActivateState = styled.div<{ $isActive: boolean }>`\n  width: 15px;\n  height: 15px;\n  border-radius: 50%;\n\n  position: absolute;\n  right: 0;\n  top: 0;\n\n  background-color: ${({ $isActive }) => ($isActive ? 'var(--active-post)' : 'var(--dark-gray)')};\n`;\n\nexport const Title = styled.p<{ $isPreview: boolean }>`\n  display: -webkit-box;\n\n  font: var(--text-title);\n  text-overflow: ellipsis;\n  word-break: break-word;\n\n  overflow: hidden;\n\n  -webkit-line-clamp: ${props => props.$isPreview && '2'};\n  -webkit-box-orient: vertical;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font-size: 2.2rem;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  font: var(--text-small);\n\n  & > :nth-child(2) {\n    margin-left: 10px;\n  }\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-caption);\n  }\n`;\n\nexport const Content = styled.p<{ $isPreview: boolean }>`\n  display: -webkit-box;\n\n  margin: 10px 0;\n\n  font: var(--text-caption);\n  text-overflow: ellipsis;\n  word-break: break-word;\n\n  overflow: hidden;\n\n  -webkit-line-clamp: ${props => props.$isPreview && '10'};\n  -webkit-box-orient: vertical;\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const DetailLink = styled(Link)<{ $isPreview: boolean }>`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  pointer-events: ${({ $isPreview }) => !$isPreview && 'none'};\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  border-radius: 4px;\n  margin-bottom: 10px;\n\n  aspect-ratio: 1/1;\n  object-fit: cover;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    margin-bottom: 20px;\n  }\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nimport { SELECT_DEFAULT, SELECT_DISABLED, SELECT_SELECTED } from './constants';\n\nexport const Container = styled.div`\n  font: var(--text-caption);\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    font: var(--text-body);\n  }\n`;\n\nconst SELECTED_CSS_OPTION = {\n  selected: {\n    border: '2px solid #60a5fa',\n    color: 'var(--slate)',\n    cursor: 'pointer',\n  },\n  disabled: {\n    border: '1px solid var(--slate)',\n    color: 'var(--slate)',\n    cursor: 'not-allowed',\n  },\n  default: {\n    border: '1px solid var(--slate)',\n    color: '',\n    cursor: 'pointer',\n  },\n};\n\ntype Status = typeof SELECT_DEFAULT | typeof SELECT_DISABLED | typeof SELECT_SELECTED;\n\nexport const SelectedContainer = styled.button<{ $status: Status }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  width: 100%;\n  padding: 8px;\n  border: ${({ $status }) => SELECTED_CSS_OPTION[$status].border};\n  border-radius: 4px;\n\n  font: inherit;\n\n  color: ${({ $status }) => SELECTED_CSS_OPTION[$status].color};\n\n  cursor: ${({ $status }) => SELECTED_CSS_OPTION[$status].cursor};\n`;\n\nexport const OptionListParent = styled.div`\n  position: relative;\n\n  z-index: ${theme.zIndex.select};\n`;\n\nexport const OptionListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  width: 100%;\n  border: 1px solid var(--slate);\n  border-radius: 4px;\n\n  position: absolute;\n  top: 4px;\n\n  background-color: var(--white);\n`;\n\nexport const OptionContainer = styled.div`\n  padding: 8px;\n\n  cursor: pointer;\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.1);\n  }\n`;\n\nexport const Image = styled.img<{ $isSelected: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-left: 1px solid var(--slate);\n  padding-left: 8px;\n`;\n","import { styled } from 'styled-components';\n\nexport const Container = styled.div`\n  border-radius: 4px;\n\n  height: 8px;\n\n  background-color: rgba(0, 0, 0, 0.15);\n`;\n\nexport const Bar = styled.div<{ progress: number; $isSelected: boolean }>`\n  border-radius: 4px;\n\n  width: ${({ progress }) => `${progress}%`};\n  height: 8px;\n\n  background-color: ${({ $isSelected }) => ($isSelected ? 'var(--primary-color)' : '#9F9F9F')};\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.button<{ $isSelected: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n\n  border: ${({ $isSelected }) =>\n    $isSelected ? '2px solid var(--primary-color)' : '1px solid rgba(0, 0, 0, 0.1)'};\n  border-radius: 4px;\n  padding: 10px 15px;\n\n  color: #5b5b5b;\n\n  text-align: left;\n\n  cursor: pointer;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    padding: 15px 25px;\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 4px;\n  margin-bottom: 10px;\n\n  width: 100%;\n\n  aspect-ratio: 1/1;\n  object-fit: cover;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const PreviewContent = styled.p`\n  display: -webkit-box;\n\n  font: var(--text-caption);\n  font-weight: 500;\n  text-overflow: ellipsis;\n  word-break: break-word;\n\n  overflow: hidden;\n\n  -webkit-line-clamp: 2; // 원하는 라인수\n  -webkit-box-orient: vertical;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const DetailContent = styled.p`\n  font: var(--text-caption);\n  font-weight: 500;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const ProgressContainer = styled.div`\n  margin-top: 12px;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    margin-top: 18px;\n  }\n`;\n\nexport const TextContainer = styled.div`\n  margin-top: 8px;\n\n  text-align: end;\n  font-weight: 500;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    margin-top: 12px;\n\n    font: var(--text-body);\n  }\n`;\n\nexport const PeopleText = styled.span`\n  font: var(--text-caption);\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const PercentText = styled.span`\n  margin-left: 4px;\n\n  font: var(--text-small);\n\n  opacity: 0.7;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-caption);\n  }\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const VoteOptionListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n\n  width: 100%;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    gap: 18px;\n  }\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  padding-top: 30px;\n`;\n\nexport const Title = styled.span`\n  font: var(--text-body);\n  font-weight: 600;\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-subtitle);\n  }\n`;\n\nexport const Keyword = styled(Title)`\n  color: #ff3c3c;\n`;\n\nexport const TextCardContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n\n  padding: 30px 15px;\n\n  font: var(--text-caption);\n\n  @media (min-width: ${theme.breakpoint.md}) {\n    font: var(--text-body);\n  }\n`;\n\nexport const TextCard = styled.li`\n  list-style: disc;\n`;\n","import { styled } from 'styled-components';\n\nimport { theme } from '@styles/theme';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SelectContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  position: relative;\n  padding: 20px 20px 30px 20px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n\n  @media (min-width: ${theme.breakpoint.sm}) {\n    padding: 40px 20px;\n  }\n`;\n\nexport const PostListContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n\n  padding: 30px 20px;\n\n  > li {\n    padding-bottom: 30px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  }\n`;\n\nexport const SelectWrapper = styled.div`\n  width: 110px;\n\n  position: absolute;\n\n  &:first-child {\n    left: 20px;\n  }\n  &:last-child {\n    right: 20px;\n  }\n`;\n","import React, { useContext, useEffect } from 'react';\n\nimport { AuthContext } from '@hooks/context/auth';\nimport { PostOptionContext } from '@hooks/context/postOption';\nimport { usePostList } from '@hooks/query/usePostList';\nimport { useIntersectionObserver } from '@hooks/useIntersectionObserver';\nimport { usePostRequestInfo } from '@hooks/usePostRequestInfo';\nimport { useSelect } from '@hooks/useSelect';\n\nimport Post from '@components/common/Post';\nimport Select from '@components/common/Select';\nimport Skeleton from '@components/common/Skeleton';\nimport { SORTING_OPTION, STATUS_OPTION } from '@components/post/PostListPage/constants';\nimport type { PostSorting, PostStatus } from '@components/post/PostListPage/types';\n\nimport EmptyPostList from '../EmptyPostList';\n\nimport * as S from './style';\n\nexport default function PostList() {\n  const { postType, postOptionalOption } = usePostRequestInfo();\n  const { loggedInfo } = useContext(AuthContext);\n  const { targetRef, isIntersecting } = useIntersectionObserver({\n    root: null,\n    rootMargin: '',\n    thresholds: 0.1,\n  });\n\n  const { postOption, setPostOption } = useContext(PostOptionContext);\n\n  const { selectedOption: selectedStatusOption, handleOptionChange: handleStatusOptionChange } =\n    useSelect<PostStatus>(postOption.status);\n  const { selectedOption: selectedSortingOption, handleOptionChange: handleSortingOptionChange } =\n    useSelect<PostSorting>(postOption.sorting);\n\n  const { data, fetchNextPage, hasNextPage, isFetchingNextPage, isPostListEmpty } = usePostList(\n    {\n      postType,\n      postSorting: selectedSortingOption,\n      postStatus: selectedStatusOption,\n      isLoggedIn: loggedInfo.isLoggedIn,\n    },\n    postOptionalOption\n  );\n\n  useEffect(() => {\n    if (isIntersecting && hasNextPage) {\n      fetchNextPage();\n    }\n  }, [isIntersecting, fetchNextPage, hasNextPage]);\n\n  return (\n    <S.Container>\n      <S.SelectContainer>\n        <S.SelectWrapper>\n          <Select<PostStatus>\n            handleOptionChange={(value: PostStatus) => {\n              setPostOption({\n                ...postOption,\n                status: value,\n              });\n              handleStatusOptionChange(value);\n            }}\n            optionList={STATUS_OPTION}\n            selectedOption={STATUS_OPTION[selectedStatusOption]}\n          />\n        </S.SelectWrapper>\n        <S.SelectWrapper>\n          <Select<PostSorting>\n            handleOptionChange={(value: PostSorting) => {\n              setPostOption({\n                ...postOption,\n                sorting: value,\n              });\n              handleSortingOptionChange(value);\n            }}\n            optionList={SORTING_OPTION}\n            selectedOption={SORTING_OPTION[selectedSortingOption]}\n          />\n        </S.SelectWrapper>\n      </S.SelectContainer>\n      <S.PostListContainer>\n        {isPostListEmpty && (\n          <EmptyPostList status={selectedStatusOption} keyword={postOptionalOption.keyword} />\n        )}\n        {data?.pages.map((postListInfo, pageIndex) => (\n          <React.Fragment key={pageIndex}>\n            {postListInfo.postList.map((post, index) => {\n              if (index === 7) {\n                return (\n                  <div key={post.postId} ref={targetRef}>\n                    <Post isPreview={true} postInfo={post} />\n                  </div>\n                );\n              }\n              return <Post key={post.postId} isPreview={true} postInfo={post} />;\n            })}\n          </React.Fragment>\n        ))}\n        {isFetchingNextPage && <Skeleton isLarge={false} />}\n      </S.PostListContainer>\n    </S.Container>\n  );\n}\n"],"names":[],"sourceRoot":""}